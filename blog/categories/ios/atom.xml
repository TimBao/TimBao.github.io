<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ios | 逝水流年]]></title>
  <link href="http://timbao.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://timbao.github.io/"/>
  <updated>2016-03-16T14:58:30+08:00</updated>
  <id>http://timbao.github.io/</id>
  <author>
    <name><![CDATA[Tim Bao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2015-06-05 Use NSTimer Attention]]></title>
    <link href="http://timbao.github.io/blog/2015/06/05/use%20NSTimer%20attention/"/>
    <updated>2015-06-05T00:00:00+08:00</updated>
    <id>http://timbao.github.io/blog/2015/06/05/use NSTimer attention</id>
    <content type="html"><![CDATA[<h3>NSTimer 在使用中需要注意的几个问题：</h3>

<ul>
<li><p>NSTimer在UITableViewCell中使用是，需要将timer加到runLoop中。</p>

<pre><code class="``objc">
  countDownTimer = [NSTimer timerWithTimeInterval:1.0 target:self selector:@selector(countDown:) userInfo:nil repeats:YES];
  NSRunLoop *currentRunLoop = [NSRunLoop currentRunLoop];
  [currentRunLoop addTimer:countDownTimer forMode:NSRunLoopCommonModes];
</code></pre></li>
<li><p>同一个timer在重复使用之前必需invalidate, 否则会造成之前的timer无法停掉，两个timer同时存在。导致的现象就是timer同时更新两次。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015-04-22 VVDocuemnter-Xcode Plugin Could Not Work Correctly]]></title>
    <link href="http://timbao.github.io/blog/2015/04/22/xcode_plugin_VVDcoumentor-Xcode_modify_shortcut_key/"/>
    <updated>2015-04-22T00:00:00+08:00</updated>
    <id>http://timbao.github.io/blog/2015/04/22/xcode_plugin_VVDcoumentor-Xcode_modify_shortcut_key</id>
    <content type="html"><![CDATA[<blockquote><p><code>VVDocuemnter-Xcode</code> plugin 是xcode上非常好用的一个插件，尤其适合做sdk接口的lazy programer。最为一个标准的<code>懒人</code>，必备之神器之一。但是当我安装完后却发现无法使用。怪哉，奇哉！</p></blockquote>

<p>google 了一圈下来，没有任何收获。索性自己看看源码，再不济也可以调试下。（开源的好处在这时候体现的淋漓尽致.）</p>

<ul>
<li><p>运行自带Test, 没有问题。</p></li>
<li><p>打印Log，发现生成comments正常。</p></li>
<li><p>调试，终于发现了问题，下面三行代码，注意看comments <strong>Cmd+V, paste</strong>, 看到这里我突然想起来，我把paste的快捷键改成control＋V了，再往下看keyCode支持<code>command</code>, <code>alt</code>, <code>shift</code>, <code>control</code>四种组合键，默认为<code>command</code>， 修改为我自定义的<code>control</code>后，重新安装，重启xcode，果然okay。</p></li>
</ul>


<pre><code class="Objective-C">//Cmd+V, paste (If it is Dvorak layout, use '.', which is corresponding the key 'V' in a QWERTY layout)
NSInteger kKeyVCode = [[VVDocumenterSetting defaultSetting] useDvorakLayout] ? kVK_ANSI_Period : kVK_ANSI_V;
[kes sendKeyCode:kKeyVCode withModifierCommand:NO alt:NO shift:NO control:YES];
</code></pre>

<blockquote><p>通过解决这个插件的问题，我知道了plugin的结构，了解了如何调试plugin，最终也解决了自己的问题。所获丰富，有时候问题是使自身进步最好的导火线！珍惜错误把！</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015-04-07 Summary Reports]]></title>
    <link href="http://timbao.github.io/blog/2015/04/07/Summary%20Reports/"/>
    <updated>2015-04-07T00:00:00+08:00</updated>
    <id>http://timbao.github.io/blog/2015/04/07/Summary Reports</id>
    <content type="html"><![CDATA[<blockquote><p>截止4月3日，我来到新公司的第一个项目在一片混乱和加班声中落下了帷幕。这可能是我参加工作至今参加的最最混乱的一个项目。所以有必要整理下思路，将项目中的有缺点(主要是缺点:）)总结纪录下，为自己也为他人提供一个参考。</p></blockquote>

<p>我将问题分为几类，按照软件工程来分吧，反正每个阶段都有一些问题。</p>

<p>一、需求方面主要遇到的问的：</p>

<ul>
<li><p>需求不明确: 项目已经开始一周，需求还没敲定。</p></li>
<li><p>需求变更频繁: 常常是到测试阶段了，需求还会变化。大boss竟然也会提需求，而且还是必须得实现。</p></li>
<li><p>需求在QQ中讨论: 在qq群里讨论需求，导致得后果就是开发不知道需求，或者是很快就忘了。</p></li>
<li><p>没有及时更新到文档上: 没有专门的需求文档和设计文档，有也是非常旧的版本，没有及时更新。</p></li>
</ul>


<p>二、UI设计</p>

<ul>
<li><p>UI设计原型图修改后不会及时更新。</p></li>
<li><p>效果图不准确，也没有及时更新。</p></li>
<li><p>标注图同上。</p></li>
<li><p>UI没有统一的标准，光颜色值就各自定义各自的。</p></li>
</ul>


<p>三、代码管理</p>

<ul>
<li><p>代码没有标准。看工程中的代码，各式各样。</p></li>
<li><p>没有code review。经常会导致代码覆盖或者是很简单的错误出现。</p></li>
<li><p>没有CI，全靠手工打包。效率极低。</p></li>
<li><p>模块划分不明确。</p></li>
<li><p>业务逻辑和UI逻辑混在一起，无法维护和测试。</p></li>
<li><p>无用代码或者无用的文件都混在一起，导致工程很混乱。相同定义出现多次。</p></li>
<li><p>后台和前端周期安排不合理，经常前端做完后，后台接口还未完成。非常耽误进度。</p></li>
</ul>


<p>四、测试</p>

<ul>
<li><p>没有Test cases.</p></li>
<li><p>Bug系统不支持Mac OS.</p></li>
<li><p>测试没有规范及周期，完全依赖研发，测试过程比较混乱，版本追踪困难。</p></li>
</ul>


<p>五、其他：</p>

<ul>
<li><p>项目周期制定拍脑门，不是根据具体需求细化后，根据每个feature的时间预估周期，而是指定死时间，在过程中不论需求如何变化，人员如何变化，周期永远不变化。也就是说一点风险控制的意识都没有。</p></li>
<li><p>项目管理没有风险控制和变更控制。</p></li>
<li><p>开发完全无法参与时间制定。</p></li>
</ul>


<blockquote><p>总之，问题很多，不局限我上面所列出的问题。有问题不可怕，可怕的是认识不到问题。从我来到项目结束，除了我及另外一个新来的同事提出过这样做不行，其他人都麻木了。每次我提出问题，总是会说习惯就好，
  忍忍就过去了。这不是做事都态度！也不是我做事的准则。我来就是为了锻炼自己能力的，解决这些问题也是我的工作，所以我必须要改变这种状况才行。</p></blockquote>

<p>  很多问题肯定无法一下子解决，所以我将问题分两部分：1，是可以开发内部解决的问题。2，是需要其他部门一起改进的。</p>

<p>对于内部:
  1. 我首先使用Jenkins搭建了自动build系统，增加版本号自动增加，将build和版本号对应起来。解决测试问题无法追踪版本及开发手动打包效率低问题。
  2. 使用MVVM模式替换原来的MVC模式，分离business logic和UI logic。
  3. 统一使用宏定义替换magic number。
  4. 建议需求和UI统一管理一份（svn），避免需求和理解的混乱。</p>

<p>对于合作：
  1. 积极提出改进建议：如UI规范统一。
  2. 接口文档及时更新。
  3. 测试统一依据效果图。
  4. 对需求变化进行把控。（好像没有效果）</p>

<p>  虽然当前项目没有太大的改进，但是在开发方面还是有很大的进步的。坚持好的习惯或者好的规范，也要有好的方法去推进。最近又将《软件作坊》这本书重新翻开，理论联系实践，理解的更加深刻。不论是对自己还是对公司都是又一些贡献。相当于双赢的局面。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2015-03-06 Solve Jenkins Build Xcode Project Could Not Found Provision Issue]]></title>
    <link href="http://timbao.github.io/blog/2015/03/06/Solve%20Jenkins%20build%20xcodeproject%20could%20not%20found%20provision%20issue/"/>
    <updated>2015-03-06T00:00:00+08:00</updated>
    <id>http://timbao.github.io/blog/2015/03/06/Solve Jenkins build xcodeproject could not found provision issue</id>
    <content type="html"><![CDATA[<p>The error is:
Code Sign error: No matching provisioning profile found</p>

<p>How to solve:</p>

<p>1-Ensure the project is building successfully from Xcode to real target.</p>

<p>2-Copy all the development cretificates &amp; credentials form your user folder to the system folder in KeyChain.</p>

<p>3-Copy all the Provisioning profiles existing in Users/<user>/Library/MobileDevice/Provisioning Profiles to /System/Library/MobileDevice/Provisioning Profiles.</p>

<p>If the directory is not exist, please create first.</p>

<p>参考：
<a href="https://issues.jenkins-ci.org/browse/JENKINS-20916">https://issues.jenkins-ci.org/browse/JENKINS-20916</a></p>
]]></content>
  </entry>
  
</feed>
